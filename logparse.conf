input {
  udp {
    host => "IP_Address of the interface_receiving_syslog"
    port => 10514
    codec => "json"
    type => "rsyslog"
  }
}

# This is an empty filter block.  You can later add other filters here to further process
# your log lines

filter {
    if [type] == "rsyslog"  {
    grok {
     match => {
        "message" => " %{NONNEGINT}\,%{NONNEGINT}\,\,%{NONNEGINT}\,%{BASE16NUM}\,%{WORD}\,%{WORD}\,%{WORD}\,%{NONNEGINT}\,%{BASE16NUM}\,\,%{NONNEGINT}\,%{NO$
        }
    }
    geoip {
     source => "srcip"
     target => "geoip"
     add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
     add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
     convert => [ "[geoip][coordinates]", "float"]
    }
    if "_geoip_lookup_failure" in [tags] {
      drop { }
    }
  }
}

# This output block will send all events of type "rsyslog" to Elasticsearch at the configured
# host and port into daily indices of the pattern, "rsyslog-YYYY.MM.DD"

output {
  if [type] == "rsyslog" {
      elasticsearch {
      hosts => [ "localhost:9243" ]
      user => "your_username"
      password => "your_password"
      index => "rsyslog-filter-test-geoip"
    }
  }
}
